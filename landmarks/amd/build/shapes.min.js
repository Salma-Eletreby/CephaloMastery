/**
 * Library of classes for handling simple shapes.
 *
 * These classes can represent shapes, let you alter them, can go to and from a string
 * representation, and can give you an SVG representation.
 *
 * @module qtype_landmarks/shapes
 * @copyright  2018 The Open University
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define(function(){"use strict";function t(t,e){this.x=t,this.y=e}function e(e,i,n){this.label=e,this.centre=new t(i||0,n||0)}function i(t,i,n,s){i=i||15,n=n||15,e.call(this,t,i,n),this.radius=s||15}function n(t,i,n,s,r){e.call(this,t,i,n),this.width=s||30,this.height=r||30}function s(i,n){e.call(this,i,0,0),this.points=n?n.slice():[new t(10,10),new t(40,10),new t(10,40)],this.normalizeShape(),this.ratio=1}function r(t){e.call(this,t)}function h(t,e){var i=t.ownerDocument.createElementNS("http://www.w3.org/2000/svg",e);return t.appendChild(i),i}function o(t,e){var i=h(t,"g");return h(i,e).setAttribute("class","shape"),h(i,"text").setAttribute("class","shapeLabel"),i}return t.prototype.toString=function(){return this.x+","+this.y},t.prototype.move=function(t,e){this.x+=t,this.y+=e},t.prototype.offset=function(e,i){return e instanceof t&&(i=e.y,e=e.x),new t(this.x+e,this.y+i)},t.parse=function(e){var i=e.split(",");if(2!==i.length)throw Error(e+" is not a valid point");return new t(i[0],i[1])},e.prototype.getType=function(){throw Error("Not implemented.")},e.prototype.getCoordinates=function(){throw Error("Not implemented.")},e.prototype.parse=function(t,e){throw Error("Not implemented.")},e.prototype.move=function(t,e,i,n){},e.prototype.edit=function(t,e,i,n,s){},e.prototype.normalizeShape=function(){},e.prototype.makeSvg=function(t){throw Error("Not implemented.")},e.prototype.updateSvg=function(t){},e.prototype.makeSimilarCircle=function(){throw Error("Not implemented.")},e.prototype.makeSimilarRectangle=function(){throw Error("Not implemented.")},e.prototype.makeSimilarPolygon=function(){throw Error("Not implemented.")},e.prototype.getHandlePositions=function(){return null},i.prototype=new e,i.prototype.getType=function(){return"circle"},i.prototype.getCoordinates=function(){return this.centre+";"+Math.abs(this.radius)},i.prototype.makeSvg=function(t){var e=o(t,"circle");return this.updateSvg(e),e},i.prototype.updateSvg=function(t){t.childNodes[0].setAttribute("cx",this.centre.x),t.childNodes[0].setAttribute("cy",this.centre.y),t.childNodes[0].setAttribute("r",Math.abs(this.radius)),t.childNodes[1].setAttribute("x",this.centre.x),t.childNodes[1].setAttribute("y",this.centre.y+15),t.childNodes[1].textContent=this.label},i.prototype.parse=function(e,i){if(!e.match(/^\d+(\.\d+)?,\d+(\.\d+)?;\d+(\.\d+)?$/))return!1;var n=e.split(";");return this.centre=t.parse(n[0]),this.centre.x=this.centre.x*parseFloat(i),this.centre.y=this.centre.y*parseFloat(i),this.radius=Math.round(n[1])*parseFloat(i),!0},i.prototype.move=function(t,e,i,n){this.centre.move(t,e),this.centre.x<this.radius&&(this.centre.x=this.radius),this.centre.x>i-this.radius&&(this.centre.x=i-this.radius),this.centre.y<this.radius&&(this.centre.y=this.radius),this.centre.y>n-this.radius&&(this.centre.y=n-this.radius)},i.prototype.edit=function(t,e,i,n,s){this.radius+=e;var r=Math.min(this.centre.x,this.centre.y,n-this.centre.x,s-this.centre.y);this.radius>r&&(this.radius=r),this.radius<-r&&(this.radius=-r)},i.prototype.normalizeShape=function(){this.radius=Math.abs(this.radius)},i.prototype.makeSimilarRectangle=function(){return new n(this.label,this.centre.x-this.radius,this.centre.y-this.radius,2*this.radius,2*this.radius)},i.prototype.makeSimilarPolygon=function(){return new s(this.label,[this.centre.offset(-this.radius,-this.radius),this.centre.offset(-this.radius,this.radius),this.centre.offset(this.radius,this.radius),this.centre.offset(this.radius,-this.radius)])},i.prototype.getHandlePositions=function(){return{moveHandle:this.centre,editHandles:[this.centre.offset(this.radius,0)]}},n.prototype=new e,n.prototype.getType=function(){return"rectangle"},n.prototype.getCoordinates=function(){return this.centre+";"+this.width+","+this.height},n.prototype.makeSvg=function(t){var e=o(t,"rect");return this.updateSvg(e),e},n.prototype.updateSvg=function(t){this.width>=0?(t.childNodes[0].setAttribute("x",this.centre.x),t.childNodes[0].setAttribute("width",this.width)):(t.childNodes[0].setAttribute("x",this.centre.x+this.width),t.childNodes[0].setAttribute("width",-this.width)),this.height>=0?(t.childNodes[0].setAttribute("y",this.centre.y),t.childNodes[0].setAttribute("height",this.height)):(t.childNodes[0].setAttribute("y",this.centre.y+this.height),t.childNodes[0].setAttribute("height",-this.height)),t.childNodes[1].setAttribute("x",this.centre.x+this.width/2),t.childNodes[1].setAttribute("y",this.centre.y+this.height/2+15),t.childNodes[1].textContent=this.label},n.prototype.parse=function(e,i){if(!e.match(/^\d+(\.\d+)?,\d+(\.\d+)?;\d+(\.\d+)?,\d+(\.\d+)?$/))return!1;var n=e.split(";");this.centre=t.parse(n[0]),this.centre.x=this.centre.x*parseFloat(i),this.centre.y=this.centre.y*parseFloat(i);var s=t.parse(n[1]);return this.width=s.x*parseFloat(i),this.height=s.y*parseFloat(i),!0},n.prototype.move=function(t,e,i,n){this.centre.move(t,e),this.centre.x<0&&(this.centre.x=0),this.centre.x>i-this.width&&(this.centre.x=i-this.width),this.centre.y<0&&(this.centre.y=0),this.centre.y>n-this.height&&(this.centre.y=n-this.height)},n.prototype.edit=function(t,e,i,n,s){this.width+=e,this.height+=i,this.width<-this.centre.x&&(this.width=-this.centre.x),this.width>n-this.centre.x&&(this.width=n-this.centre.x),this.height<-this.centre.y&&(this.height=-this.centre.y),this.height>s-this.centre.y&&(this.height=s-this.centre.y)},n.prototype.normalizeShape=function(){this.width<0&&(this.centre.x+=this.width,this.width=-this.width),this.height<0&&(this.centre.y+=this.height,this.height=-this.height)},n.prototype.makeSimilarCircle=function(){return new i(this.label,Math.round(this.centre.x+this.width/2),Math.round(this.centre.y+this.height/2),Math.round((this.width+this.height)/4))},n.prototype.makeSimilarPolygon=function(){return new s(this.label,[this.centre,this.centre.offset(0,this.height),this.centre.offset(this.width,this.height),this.centre.offset(this.width,0)])},n.prototype.getHandlePositions=function(){return{moveHandle:this.centre.offset(this.width/2,this.height/2),editHandles:[this.centre.offset(this.width,this.height)]}},s.prototype=new e,s.prototype.getType=function(){return"polygon"},s.prototype.getCoordinates=function(){for(var t="",e=0;e<this.points.length;e++)t+=this.centre.offset(this.points[e])+";";return t.slice(0,t.length-1)},s.prototype.makeSvg=function(t){var e=o(t,"polygon");return this.updateSvg(e),e},s.prototype.updateSvg=function(t){t.childNodes[0].setAttribute("points",this.getCoordinates().replace(/[,;]/g," ")),t.childNodes[0].setAttribute("transform","scale("+parseFloat(this.ratio)+")"),t.childNodes[1].setAttribute("x",this.centre.x),t.childNodes[1].setAttribute("y",this.centre.y+15),t.childNodes[1].textContent=this.label},s.prototype.parse=function(e,i){if(!e.match(/^\d+(\.\d+)?,\d+(\.\d+)?(?:;\d+(\.\d+)?,\d+(\.\d+)?)*$/))return!1;for(var n=e.split(";"),s=[],r=0;r<n.length;r++)s.push(t.parse(n[r]));return this.points=s,this.centre.x=0,this.centre.y=0,this.ratio=i,this.normalizeShape(),!0},s.prototype.move=function(t,e,i,n){this.centre.move(t,e);for(var s=i,r=0,h=n,o=0,c=0;c<this.points.length;c++)s=Math.min(s,this.points[c].x),r=Math.max(r,this.points[c].x),h=Math.min(h,this.points[c].y),o=Math.max(o,this.points[c].y);this.centre.x<-s&&(this.centre.x=-s),this.centre.x>i-r&&(this.centre.x=i-r),this.centre.y<-h&&(this.centre.y=-h),this.centre.y>n-o&&(this.centre.y=n-o)},s.prototype.edit=function(t,e,i,n,s){this.points[t].move(e,i),this.points[t].x<-this.centre.x&&(this.points[t].x=-this.centre.x),this.points[t].x>n-this.centre.x&&(this.points[t].x=n-this.centre.x),this.points[t].y<-this.centre.y&&(this.points[t].y=-this.centre.y),this.points[t].y>s-this.centre.y&&(this.points[t].y=s-this.centre.y)},s.prototype.addNewPointAfter=function(e){this.points.splice(e,0,new t(this.points[e].x,this.points[e].y))},s.prototype.normalizeShape=function(){var t,e=0,i=0;if(0!==this.points.length){for(t=0;t<this.points.length;t++)e+=this.points[t].x,i+=this.points[t].y;if(e=Math.round(e/this.points.length),i=Math.round(i/this.points.length),0!==e||0!==i){for(t=0;t<this.points.length;t++)this.points[t].move(-e,-i);this.centre.move(e,i)}}},s.prototype.makeSimilarCircle=function(){return this.makeSimilarRectangle().makeSimilarCircle()},s.prototype.makeSimilarRectangle=function(){for(var t,e=0,i=0,s=0,r=0,h=0;h<this.points.length;h++)e=Math.min(e,(t=this.points[h]).x),i=Math.max(i,t.x),s=Math.min(s,t.y),r=Math.max(r,t.y);return new n(this.label,this.centre.x+e,this.centre.y+s,Math.max(i-e,10),Math.max(r-s,10))},s.prototype.getHandlePositions=function(){for(var t=[],e=0;e<this.points.length;e++)t.push(this.points[e].offset(this.centre.x,this.centre.y));return this.centre.x=this.centre.x*parseFloat(this.ratio),this.centre.y=this.centre.y*parseFloat(this.ratio),{moveHandle:this.centre,editHandles:t}},r.prototype=new e,r.prototype.getType=function(){return"null"},r.prototype.getCoordinates=function(){return""},r.prototype.makeSvg=function(t){return null},r.prototype.updateSvg=function(t){},r.prototype.parse=function(t){return!1},r.prototype.makeSimilarCircle=function(){return new i(this.label)},r.prototype.makeSimilarRectangle=function(){return new n(this.label)},r.prototype.makeSimilarPolygon=function(){return new s(this.label)},{Point:t,Shape:e,Circle:i,Rectangle:n,Polygon:s,NullShape:r,createSvgElement:h,make:function(t,e){switch(t){case"circle":return new i(e);case"rectangle":return new n(e);case"polygon":return new s(e);default:return new r(e)}},getSimilar:function(t,e){if(t===e.getType())return e;switch(t){case"circle":return e.makeSimilarCircle();case"rectangle":return e.makeSimilarRectangle();case"polygon":return e.makeSimilarPolygon();default:return new r(e.label)}}}});
//# sourceMappingURL=shapes.min.js.map